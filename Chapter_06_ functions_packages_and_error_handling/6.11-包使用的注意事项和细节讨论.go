package main

import (
	"fmt"
)

func main() {
	fmt.Println(`
	(1)在给一个文件打包时,改包对应一个文件夹,比如utils文件夹对应的包名是utils,文件的包名通常和文件所在的文件夹名一致,一般为小写字母
	(2)当一个文件要使用其他包函数或者变量时,需要先引入对应的包
		引入方式1: import "包名"
		引入方式2:
		import (
			"包名"
			"包名"
		)
	(3)package指令在文件第一行,然后是import指令
	(4)在import包时,路径从$GOPATH的src下开始,不用带src,编译器会自动从src下开始引入
	(5)为了让其他包的文件可以访问到本包的函数,则该函数名的首字母需要大写,类似其它语言的public,这样才能跨包访问
	(6)在访问其它函数、变量时,其语法是包名.函数名
	(7)如果包名比较长,Go支持给包取名,如果给包取了别名,则需要使用别名来访问该包的函数和变量
	(8)同一包下,不能有相同的函数名(也不能有相同的全局变量名),否则报重复定义
	(9)如果要编译一个可执行文件,则需要将这个包声明为main,即package main,这是一个语法规范
	(10)如果写的是一个库,包名可以自定义
	(11)编译的指令在项目目录下,编译路径不需要带src,编译器会自动带
	(12)编译时需要编译main包所在的文件夹,比如 D:\goproject>go build go_code/project/main
	(13)编译时需要编译main包所在的文件夹
	(14)编译后生成一个有默认名的可执行文件，在$GOPATH目录下,可以指定名和目录,比如放在bin目录下:
	D:\goproject>go build -o bin/my.exe go_code/project/main
	(15)编译完成后会生成pkg文件,生成一个库文件,比如utils.a

	
	`)
}
